{
  "info": {
    "_postman_id": "5354a5f5-8a5d-40b7-820e-e912469bac2c",
    "name": "LUMEN On-Premise",
    "description": "## **Colección API** LUMEN On-Premise **para Facturación - Plaza La Guardia**\n\nEsta colección de Postman ha sido diseñada para el equipo de TI de Plaza La Guardia, facilitando la integración y consulta de la API de LUMEN On-Premise con Odoo o cualquier otro sistema capaz de consumir una API REST. Incluye endpoints clave para autenticación segura (JWT), gestión de dispositivos (medidores de agua y energía) y recuperación de telemetría (valores instantáneos y acumulados).Ademas de la obtención de Assets y sus relaciones con los dispositivos.\n\nUtiliza esta colección para agilizar tus pruebas, desarrollo y operaciones de facturación.\"\n\n## Recomendación: Crear un Fork de la Colección y el Entorno\n\nPara asegurar un flujo de trabajo colaborativo eficiente y evitar conflictos, se recomienda encarecidamente que cada miembro del equipo de TI de Plaza La Guardia que vaya a trabajar con esta colección de Postman cree un \"fork\" de la colección y del entorno en su propio workspace.\n\n**Beneficios de usar un Fork:**\n\n- **Independencia:** Cada desarrollador puede realizar cambios y pruebas sin afectar la colección original o el trabajo de otros.\n    \n- **Colaboración:** Permite fusionar los cambios de forma controlada una vez que las modificaciones han sido probadas y validadas.\n    \n- **Historial de Cambios:** Facilita el seguimiento de las versiones y la reversión a estados anteriores si es necesario.\n    \n\n**Pasos para crear un Fork en Postman:**\n\n1. **Fork de la Colección:**\n    \n    - En la barra lateral izquierda de Postman, navega hasta la colección \"LUMEN On-Premise - Plaza La Guardia\".\n        \n    - Haz clic derecho sobre la colección o haz clic en los tres puntos (`...`) junto al nombre de la colección.\n        \n    - Selecciona la opción \"Create a fork\" (Crear un fork).\n        \n    - Elige tu workspace personal como destino y asigna un nombre distintivo al fork (ej., \"Mi Fork - API ThingsBoard\").\n        \n    - Elije el entorno para las variables.\n        \n    - Haz clic en \"Fork Collection\".\n        \n\n<img src=\"https://content.pstmn.io/f302494b-df31-4aa7-bf54-ca88f2db6c53/Q2FwdHVyYSBkZSBwYW50YWxsYSAyMDI1LTA3LTA2IDE5MjYwNi5wbmc=\">\n\nAl seguir estos pasos, cada miembro del equipo tendrá su propia copia de trabajo, lo que facilitará un desarrollo y pruebas más organizados y seguros. Documentación de forks en Postman [https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-elements/](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-elements/)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "39134996",
    "_collection_link": "https://thingsboard-api.postman.co/workspace/LUMEN-ENERGY-SOLUTIONS~8c2422e4-9904-4a84-85c3-adf1eadcaf99/collection/39134996-5354a5f5-8a5d-40b7-820e-e912469bac2c?action=share&source=collection_link&creator=39134996"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login get JWT token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"EMAIL@EMAIL.EMAIL\",\n  \"password\": \"PASSWORD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login method used to authenticate user and get JWT token data.\n\nValue of the response **token** field can be used as **X-Authorization** header value:\n\n`X-Authorization: Bearer $JWT_TOKEN_VALUE`."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"tenant\",\n  \"username\": \"tenant@thingsboard.org\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZW5hbnRAdGhpbmdzYm9hcmQub3JnIi...\",\n  \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZW5hbnRAdGhpbmdzYm9hcmQub3JnIi...\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"tenant\",\n  \"username\": \"tenant@thingsboard.org\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"User account is locked due to security policy\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864579,\n  \"subscriptionErrorCode\": null,\n  \"subscriptionEntry\": null,\n  \"subscriptionValue\": null\n}"
            },
            {
              "name": "Unauthorized (**Expired credentials**)",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"tenant\",\n  \"username\": \"tenant@thingsboard.org\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"User password expired!\",\n  \"errorCode\": 15,\n  \"timestamp\": 1751739864585,\n  \"subscriptionErrorCode\": null,\n  \"subscriptionEntry\": null,\n  \"subscriptionValue\": null,\n  \"resetToken\": \"K78VzcCqCo10S2uGGFicW3ShXCSzMS\"\n}"
            }
          ]
        },
        {
          "name": "Login get JWT token Copy",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"EMAIL@EMAIL.EMAIL\",\n  \"password\": \"PASSWORD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login method used to authenticate user and get JWT token data.\n\nValue of the response **token** field can be used as **X-Authorization** header value:\n\n`X-Authorization: Bearer $JWT_TOKEN_VALUE`."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"tenant\",\n  \"username\": \"tenant@thingsboard.org\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZW5hbnRAdGhpbmdzYm9hcmQub3JnIi...\",\n  \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZW5hbnRAdGhpbmdzYm9hcmQub3JnIi...\"\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"tenant\",\n  \"username\": \"tenant@thingsboard.org\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"User account is locked due to security policy\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864579,\n  \"subscriptionErrorCode\": null,\n  \"subscriptionEntry\": null,\n  \"subscriptionValue\": null\n}"
            },
            {
              "name": "Unauthorized (**Expired credentials**)",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"tenant\",\n  \"username\": \"tenant@thingsboard.org\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"User password expired!\",\n  \"errorCode\": 15,\n  \"timestamp\": 1751739864585,\n  \"subscriptionErrorCode\": null,\n  \"subscriptionEntry\": null,\n  \"subscriptionValue\": null,\n  \"resetToken\": \"K78VzcCqCo10S2uGGFicW3ShXCSzMS\"\n}"
            }
          ]
        },
        {
          "name": "Refresh JWT token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"REFRESH_TOKEN\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "token"]
            },
            "description": "Method to refresh JWT token. Provide a valid refresh token to get a new JWT token.\n\nThe response contains a new token that can be used for authorization.\n\n`X-Authorization: Bearer $JWT_TOKEN_VALUE`"
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "token"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZW5hbnRAdGhpbmdzYm9hcmQub3JnIi...\",\n  \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZW5hbnRAdGhpbmdzYm9hcmQub3JnIi...\"\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "token"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid request body\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "token"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"User account is locked due to security policy\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864579,\n  \"subscriptionErrorCode\": null,\n  \"subscriptionEntry\": null,\n  \"subscriptionValue\": null\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "token"]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "token"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "token"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized (**Expired credentials**)",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "token"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"User password expired!\",\n  \"errorCode\": 15,\n  \"timestamp\": 1751739864585,\n  \"subscriptionErrorCode\": null,\n  \"subscriptionEntry\": null,\n  \"subscriptionValue\": null,\n  \"resetToken\": \"K78VzcCqCo10S2uGGFicW3ShXCSzMS\"\n}"
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Special API call to record the 'logout' of the user to the Audit Logs. Since platform uses [JWT](https://jwt.io/), the actual logout is the procedure of clearing the [JWT](https://jwt.io/) token on the client side. "
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid request body\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "user"]
            },
            "description": "Get the information about the User which credentials are used to perform this REST API call."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/user",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "user"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"authority\": \"SYS_ADMIN\",\n  \"email\": \"user@example.com\",\n  \"id\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdTime\": 1609459200000,\n  \"tenantId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"dolor\",\n  \"customMenuId\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"version\": 35730317,\n  \"name\": \"user@example.com\",\n  \"ownerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"additionalInfo\": {}\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/user",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "user"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/user",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "user"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/user",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "user"]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/user",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "user"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/user",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "user"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        }
      ],
      "description": "Este folder contiene las solicitudes esenciales para la gestión de la autenticación en la API de LUMEN On-Premise. Aquí encontrarás los endpoints para iniciar sesión y obtener los Tokens JWT (acceso y refresco), así como para renovar tu Token de Acceso cuando sea necesario, asegurando una conexión segura y continua con la plataforma."
    },
    {
      "name": "Relations",
      "item": [
        {
          "name": "Get List of Relation From",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "{{TOKEN}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/relations/info?fromId=25c48110-57a9-11f0-8faa-bd0b06b17044&fromType=ASSET",
              "host": ["{{baseUrl}}"],
              "path": ["api", "relations", "info"],
              "query": [
                {
                  "key": "fromId",
                  "value": "25c48110-57a9-11f0-8faa-bd0b06b17044",
                  "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                },
                {
                  "key": "relationTypeGroup",
                  "value": "DEVICE",
                  "description": "A string value representing relation type group. For example, 'COMMON'",
                  "disabled": true
                },
                {
                  "key": "fromType",
                  "value": "ASSET"
                }
              ]
            },
            "description": "Returns list of relation info objects for the specified entity by the 'from' direction. \n\nIf the user has the authority of 'System Administrator', the server checks that the entity is owned by the sysadmin. If the user has the authority of 'Tenant Administrator', the server checks that the entity is owned by the same tenant. If the user has the authority of 'Customer User', the server checks that the entity is assigned to the same customer. Relation Info is an extension of the default Relation object that contains information about the 'from' and 'to' entity names. "
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info{{?fromId,fromType,relationTypeGroup}}?fromId=sed Excepteur&fromType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations",
                    "info{{?fromId,fromType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "fromId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "fromType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"from\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"to\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"typeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fromName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"toName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additionalInfo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"from\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"to\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"typeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fromName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"toName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additionalInfo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info{{?fromId,fromType,relationTypeGroup}}?fromId=sed Excepteur&fromType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations",
                    "info{{?fromId,fromType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "fromId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "fromType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info{{?fromId,fromType,relationTypeGroup}}?fromId=sed Excepteur&fromType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations",
                    "info{{?fromId,fromType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "fromId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "fromType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info{{?fromId,fromType,relationTypeGroup}}?fromId=sed Excepteur&fromType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations",
                    "info{{?fromId,fromType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "fromId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "fromType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info{{?fromId,fromType,relationTypeGroup}}?fromId=sed Excepteur&fromType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations",
                    "info{{?fromId,fromType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "fromId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "fromType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info{{?fromId,fromType,relationTypeGroup}}?fromId=sed Excepteur&fromType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations",
                    "info{{?fromId,fromType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "fromId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "fromType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get List of Relations To",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/relations?toId=77974fe0-57a9-11f0-8faa-bd0b06b17044&toType=DEVICE&relationType=Contains",
              "host": ["{{baseUrl}}"],
              "path": ["api", "relations"],
              "query": [
                {
                  "key": "toId",
                  "value": "77974fe0-57a9-11f0-8faa-bd0b06b17044",
                  "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                },
                {
                  "key": "toType",
                  "value": "DEVICE",
                  "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                },
                {
                  "key": "relationType",
                  "value": "Contains",
                  "description": "(Required) A string value representing relation type between entities. For example, 'Contains', 'Manages'. It can be any string value."
                },
                {
                  "key": "relationTypeGroup",
                  "value": "sed Excepteur",
                  "description": "A string value representing relation type group. For example, 'COMMON'",
                  "disabled": true
                }
              ]
            },
            "description": "Returns list of relation objects for the specified entity by the 'to' direction and relation type. \n\nIf the user has the authority of 'System Administrator', the server checks that the entity is owned by the sysadmin. If the user has the authority of 'Tenant Administrator', the server checks that the entity is owned by the same tenant. If the user has the authority of 'Customer User', the server checks that the entity is assigned to the same customer."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations{{?toId,toType,relationType,relationTypeGroup}}?toId=sed Excepteur&toType=sed Excepteur&relationType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations{{?toId,toType,relationType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "toId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "toType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"from\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"to\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"typeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additionalInfo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"from\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"to\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"typeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"version\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"additionalInfo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations{{?toId,toType,relationType,relationTypeGroup}}?toId=sed Excepteur&toType=sed Excepteur&relationType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations{{?toId,toType,relationType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "toId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "toType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations{{?toId,toType,relationType,relationTypeGroup}}?toId=sed Excepteur&toType=sed Excepteur&relationType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations{{?toId,toType,relationType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "toId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "toType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations{{?toId,toType,relationType,relationTypeGroup}}?toId=sed Excepteur&toType=sed Excepteur&relationType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations{{?toId,toType,relationType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "toId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "toType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations{{?toId,toType,relationType,relationTypeGroup}}?toId=sed Excepteur&toType=sed Excepteur&relationType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations{{?toId,toType,relationType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "toId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "toType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/relations{{?toId,toType,relationType,relationTypeGroup}}?toId=sed Excepteur&toType=sed Excepteur&relationType=sed Excepteur&relationTypeGroup=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "relations{{?toId,toType,relationType,relationTypeGroup}}"
                  ],
                  "query": [
                    {
                      "key": "toId",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "toType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationType",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "relationTypeGroup",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Find related entity infos",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"parameters\": {\n    \"rootId\": \"25c48110-57a9-11f0-8faa-bd0b06b17044\", // uuid\n    \"rootType\": \"ASSET\", // or DEVICE\n    \"direction\": \"FROM\", // or TO\n    \"relationTypeGroup\": \"COMMON\",\n    \"maxLevel\": 1, // deep of the relation 1,2,4..5\n    \"fetchLastLevelOnly\": false // opcional\n  },\n  \"filters\": [\n    {\n    //   \"relationType\": \"Contains\" // optional\n    //   \"entityTypes\": [\"DEVICE\"] // opcional (ASSET or DEVICE)\n    }\n  ]\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/relations/info",
              "host": ["{{baseUrl}}"],
              "path": ["api", "relations", "info"]
            },
            "description": "Returns all entity infos that are related to the specific entity. The entity id, relation type, entity types, depth of the search, and other query parameters defined using complex 'EntityRelationsQuery' object. See 'Model' tab of the Parameters for more info. Relation Info is an extension of the default Relation object that contains information about the 'from' and 'to' entity names. "
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parameters\": {\n    \"rootId\": \"25c48110-57a9-11f0-8faa-bd0b06b17044\", // uuid\n    \"rootType\": \"ASSET\", // or DEVICE\n    \"direction\": \"FROM\", // or TO\n    \"relationTypeGroup\": \"COMMON\",\n    \"maxLevel\": 1, // deep of the relation 1,2,4..5\n    \"fetchLastLevelOnly\": false // opcional\n  },\n  \"filters\": [\n    {\n    //   \"relationType\": \"Contains\" // optional\n    //   \"entityTypes\": [\"DEVICE\"] // opcional (ASSET or DEVICE)\n    }\n  ]\n}\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "relations", "info"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Server",
                  "value": "nginx/1.26.0 (Ubuntu)"
                },
                {
                  "key": "Date",
                  "value": "Mon, 07 Jul 2025 00:51:45 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Vary",
                  "value": "Origin"
                },
                {
                  "key": "Vary",
                  "value": "Access-Control-Request-Method"
                },
                {
                  "key": "Vary",
                  "value": "Access-Control-Request-Headers"
                }
              ],
              "cookie": [],
              "body": "[\n    // first device related\n    {\n        \"from\": {\n            \"entityType\": \"ASSET\",\n            \"id\": \"25c48110-57a9-11f0-8faa-bd0b06b17044\"\n        },\n        \"to\": {\n            \"entityType\": \"DEVICE\",\n            \"id\": \"539be2e0-57a9-11f0-8faa-bd0b06b17044\"\n        },\n        \"type\": \"Contains\",\n        \"typeGroup\": \"COMMON\",\n        \"version\": 141,\n        \"fromName\": null,\n        \"toName\": \"EM-laguardia-8938\",\n        \"additionalInfo\": null\n    },\n    // second device related\n    {\n        \"from\": {\n            \"entityType\": \"ASSET\",\n            \"id\": \"25c48110-57a9-11f0-8faa-bd0b06b17044\"\n        },\n        \"to\": {\n            \"entityType\": \"DEVICE\",\n            \"id\": \"77974fe0-57a9-11f0-8faa-bd0b06b17044\"\n        },\n        \"type\": \"Contains\",\n        \"typeGroup\": \"COMMON\",\n        \"version\": 140,\n        \"fromName\": null,\n        \"toName\": \"WM-laguardia-4567\",\n        \"additionalInfo\": null\n    }\n    // others devices related...\n]"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parameters\": {\n    \"rootId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rootType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"direction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"relationTypeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fetchLastLevelOnly\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"filters\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "relations", "info"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid request body\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parameters\": {\n    \"rootId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rootType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"direction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"relationTypeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fetchLastLevelOnly\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"filters\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "relations", "info"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parameters\": {\n    \"rootId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rootType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"direction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"relationTypeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fetchLastLevelOnly\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"filters\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "relations", "info"]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parameters\": {\n    \"rootId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rootType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"direction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"relationTypeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fetchLastLevelOnly\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"filters\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "relations", "info"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parameters\": {\n    \"rootId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rootType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"direction\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"relationTypeGroup\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fetchLastLevelOnly\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"filters\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/relations/info",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "relations", "info"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        }
      ],
      "description": "Este folder contiene las solicitudes para consultar las relaciones entre diferentes entidades en LUMEN On-Premise, como la vinculación entre comercios (Assets) y sus medidores (Devices). Permite obtener listas de relaciones \"desde\" o \"hacia\" una entidad específica, y encontrar información de entidades relacionadas, lo cual es vital para comprender la estructura de los datos para la facturación."
    },
    {
      "name": "Assets",
      "item": [
        {
          "name": "Get Assets",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tenant/assets?pageSize=100&page=0",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tenant", "assets"],
              "query": [
                {
                  "key": "pageSize",
                  "value": "100",
                  "description": "(Required) Maximum amount of entities in a one page"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "(Required) Sequence number of page starting from 0"
                },
                {
                  "key": "type",
                  "value": "WM",
                  "description": "Asset type",
                  "disabled": true
                },
                {
                  "key": "textSearch",
                  "value": "WM",
                  "description": "The case insensitive 'substring' filter based on the asset name.",
                  "disabled": true
                },
                {
                  "key": "sortProperty",
                  "value": "value",
                  "description": "Property of entity to sort by",
                  "disabled": true
                },
                {
                  "key": "sortOrder",
                  "value": "date",
                  "description": "Sort order. ASC (ASCENDING) or DESC (DESCENDING)",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a page of assets owned by tenant. You can specify parameters to filter the results. The result is wrapped with PageData object that allows you to iterate over result set using pagination. See the 'Model' tab of the Response Class for more details. \n\n Security check is performed to verify that the user has 'READ' permission for the entity (entities)."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalPages\": 1927836,\n  \"totalElements\": -86784337,\n  \"hasNext\": false\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets?pageSize=-26627464&page=-26627464",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur",
                      "disabled": true
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur",
                      "disabled": true
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit",
                      "disabled": true
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Asset by Name",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tenant/assets?assetName=Local 01",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tenant", "assets"],
              "query": [
                {
                  "key": "assetName",
                  "value": "Local 01",
                  "description": "(Required) A string value representing the Asset name."
                }
              ]
            },
            "description": "Requested asset must be owned by tenant that the user belongs to. Asset name is an unique property of asset. So it can be used to identify the asset.\n\n Security check is performed to verify that the user has 'READ' permission for the entity (entities)."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets{{?assetName}}?assetName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets{{?assetName}}"],
                  "query": [
                    {
                      "key": "assetName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"name\": \"Empire State Building\",\n  \"id\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdTime\": 1609459200000,\n  \"tenantId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"type\": \"Building\",\n  \"label\": \"NY Building\",\n  \"assetProfileId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"version\": -48217153,\n  \"ownerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"additionalInfo\": {}\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets{{?assetName}}?assetName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets{{?assetName}}"],
                  "query": [
                    {
                      "key": "assetName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets{{?assetName}}?assetName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets{{?assetName}}"],
                  "query": [
                    {
                      "key": "assetName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets{{?assetName}}?assetName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets{{?assetName}}"],
                  "query": [
                    {
                      "key": "assetName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets{{?assetName}}?assetName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets{{?assetName}}"],
                  "query": [
                    {
                      "key": "assetName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/assets{{?assetName}}?assetName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "assets{{?assetName}}"],
                  "query": [
                    {
                      "key": "assetName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        }
      ],
      "description": "Este folder contiene las solicitudes para consultar los activos (comercios) registrados en LUMEN On-Premise. Permite obtener listados de activos y buscar activos específicos por su nombre, lo cual es fundamental para vincular los medidores a sus respectivas ubicaciones en Plaza La Guardia."
    },
    {
      "name": "Devices",
      "item": [
        {
          "name": "Get Devices",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tenant/devices?pageSize=100&page=0",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tenant", "devices"],
              "query": [
                {
                  "key": "pageSize",
                  "value": "100",
                  "description": "(Required) Maximum amount of entities in a one page"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "(Required) Sequence number of page starting from 0"
                },
                {
                  "key": "type",
                  "value": "sed Excepteur",
                  "description": "Device type as the name of the device profile",
                  "disabled": true
                },
                {
                  "key": "textSearch",
                  "value": "sed Excepteur",
                  "description": "The case insensitive 'substring' filter based on the device name.",
                  "disabled": true
                },
                {
                  "key": "sortProperty",
                  "value": "value",
                  "description": "Property of entity to sort by",
                  "disabled": true
                },
                {
                  "key": "sortOrder",
                  "value": "ASC",
                  "description": "Sort order. ASC (ASCENDING) or DESC (DESCENDING)",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a page of devices owned by tenant. You can specify parameters to filter the results. The result is wrapped with PageData object that allows you to iterate over result set using pagination. See the 'Model' tab of the Response Class for more details. \n\nAvailable for users with 'TENANT_ADMIN' authority. Security check is performed to verify that the user has 'READ' permission for the entity (entities)."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "tenant",
                    "devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}"
                  ],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalPages\": 1927836,\n  \"totalElements\": -86784337,\n  \"hasNext\": false\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "tenant",
                    "devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}"
                  ],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "tenant",
                    "devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}"
                  ],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "tenant",
                    "devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}"
                  ],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "tenant",
                    "devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}"
                  ],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}?pageSize=-26627464&page=-26627464&type=sed Excepteur&textSearch=sed Excepteur&sortProperty=velit&sortOrder=nisi velit esse",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "tenant",
                    "devices{{?pageSize,page,type,textSearch,sortProperty,sortOrder}}"
                  ],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "-26627464"
                    },
                    {
                      "key": "page",
                      "value": "-26627464"
                    },
                    {
                      "key": "type",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "textSearch",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "sortProperty",
                      "value": "velit"
                    },
                    {
                      "key": "sortOrder",
                      "value": "nisi velit esse"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Devices Types",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/device/types",
              "host": ["{{baseUrl}}"],
              "path": ["api", "device", "types"]
            },
            "description": "Deprecated. See 'getDeviceProfileNames' API from Device Profile Controller instead.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", "types"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"tenantId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  {\n    \"tenantId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n]"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", "types"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", "types"]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", "types"]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", "types"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", "types"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Device By Name",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tenant/devices?deviceName=EM-laguardia-8938",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tenant", "devices"],
              "query": [
                {
                  "key": "deviceName",
                  "value": "EM-laguardia-8938",
                  "description": "(Required) A string value representing the Device name."
                }
              ]
            },
            "description": "Requested device must be owned by tenant that the user belongs to. Device name is an unique property of device. So it can be used to identify the device.\n\nAvailable for users with 'TENANT_ADMIN' authority. Security check is performed to verify that the user has 'READ' permission for the entity (entities)."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?deviceName}}?deviceName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "devices{{?deviceName}}"],
                  "query": [
                    {
                      "key": "deviceName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"deviceProfileId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdTime\": 1609459200000,\n  \"tenantId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"A4B72CCDFF33\",\n  \"type\": \"Temperature Sensor\",\n  \"label\": \"Room 234 Sensor\",\n  \"firmwareId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"softwareId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"version\": -48047178,\n  \"ownerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"additionalInfo\": {},\n  \"deviceData\": {\n    \"configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transportConfiguration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?deviceName}}?deviceName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "devices{{?deviceName}}"],
                  "query": [
                    {
                      "key": "deviceName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?deviceName}}?deviceName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "devices{{?deviceName}}"],
                  "query": [
                    {
                      "key": "deviceName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?deviceName}}?deviceName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "devices{{?deviceName}}"],
                  "query": [
                    {
                      "key": "deviceName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?deviceName}}?deviceName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "devices{{?deviceName}}"],
                  "query": [
                    {
                      "key": "deviceName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/tenant/devices{{?deviceName}}?deviceName=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "tenant", "devices{{?deviceName}}"],
                  "query": [
                    {
                      "key": "deviceName",
                      "value": "sed Excepteur"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Device By ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/device/539be2e0-57a9-11f0-8faa-bd0b06b17044",
              "host": ["{{baseUrl}}"],
              "path": ["api", "device", "539be2e0-57a9-11f0-8faa-bd0b06b17044"]
            },
            "description": "Fetch the Device object based on the provided Device Id. \n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority. Security check is performed to verify that the user has 'READ' permission for the entity (entities)."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"deviceProfileId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdTime\": 1609459200000,\n  \"tenantId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"customerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"A4B72CCDFF33\",\n  \"type\": \"Temperature Sensor\",\n  \"label\": \"Room 234 Sensor\",\n  \"firmwareId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"softwareId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"version\": -48047178,\n  \"ownerId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"additionalInfo\": {},\n  \"deviceData\": {\n    \"configuration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transportConfiguration\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Device Credentials",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/device/539be2e0-57a9-11f0-8faa-bd0b06b17044/credentials",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "device",
                "539be2e0-57a9-11f0-8faa-bd0b06b17044",
                "credentials"
              ]
            },
            "description": "If during device creation there wasn't specified any credentials, platform generates random 'ACCESS_TOKEN' credentials.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority. Security check is performed to verify that the user has 'READ_CREDENTIALS' permission for the entity (entities)."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId", "credentials"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"credentialsId\": \"Access token or other value that depends on the credentials type\",\n  \"deviceId\": {\n    \"entityType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"createdTime\": 1609459200000,\n  \"credentialsType\": \"X509_CERTIFICATE\",\n  \"credentialsValue\": \"Null in case of ACCESS_TOKEN. See model definition.\",\n  \"version\": -14973134\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId", "credentials"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId", "credentials"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId", "credentials"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId", "credentials"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/device/:deviceId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "device", ":deviceId", "credentials"],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        }
      ],
      "description": "Este folder agrupa las solicitudes para la gestión y consulta de los dispositivos (medidores de agua y energía) registrados en LUMEN On-Premise. Permite obtener listados de dispositivos, filtrar por tipo, buscar por nombre o ID, y acceder a sus credenciales, facilitando la administración del inventario de medidores para Plaza La Guardia."
    },
    {
      "name": "Telemetry",
      "item": [
        {
          "name": "Get Available Keys for Timeseries",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/plugins/telemetry/DEVICE/539be2e0-57a9-11f0-8faa-bd0b06b17044/keys/timeseries",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "plugins",
                "telemetry",
                "DEVICE",
                "539be2e0-57a9-11f0-8faa-bd0b06b17044",
                "keys",
                "timeseries"
              ]
            },
            "description": "Returns a set of unique time series key names for the selected entity. \n\nReferencing a non-existing entity Id or invalid entity type will cause an error. \n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/timeseries",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "timeseries"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/timeseries",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "timeseries"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/timeseries",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "timeseries"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/timeseries",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "timeseries"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/timeseries",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "timeseries"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/timeseries",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "timeseries"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get TimeSeries by Keys",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/plugins/telemetry/DEVICE/539be2e0-57a9-11f0-8faa-bd0b06b17044/values/timeseries?keys=energyCount,temperature&startTs=1751263385000&endTs=1751854985000&interval=0&limit=1000",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "plugins",
                "telemetry",
                "DEVICE",
                "539be2e0-57a9-11f0-8faa-bd0b06b17044",
                "values",
                "timeseries"
              ],
              "query": [
                {
                  "key": "keys",
                  "value": "energyCount,temperature",
                  "description": "By get several keys concat them with a comma \",\""
                },
                {
                  "key": "startTs",
                  "value": "1751263385000"
                },
                {
                  "key": "endTs",
                  "value": "1751854985000"
                },
                {
                  "key": "interval",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "1000"
                },
                {
                  "key": "intervalType",
                  "value": "dolor consequat Ut labore laborum",
                  "description": "A string value representing the type fo the interval.",
                  "disabled": true
                },
                {
                  "key": "timeZone",
                  "value": "America/Tegucigalpa",
                  "description": "A string value representing the timezone that will be used to calculate exact timestamps for 'WEEK', 'WEEK_ISO', 'MONTH' and 'QUARTER' interval types.",
                  "disabled": true
                },
                {
                  "key": "agg",
                  "value": "sit dolore",
                  "description": "A string value representing the aggregation function. If the interval is not specified, 'agg' parameter will use 'NONE' value.",
                  "disabled": true
                },
                {
                  "key": "orderBy",
                  "value": "energyCount",
                  "description": "Sort order. ASC (ASCENDING) or DESC (DESCENDING)",
                  "disabled": true
                },
                {
                  "key": "useStrictDataTypes",
                  "value": "false",
                  "description": "Enables/disables conversion of telemetry values to strings. Conversion is enabled by default. Set parameter to 'true' in order to disable the conversion.",
                  "disabled": true
                }
              ]
            },
            "description": "Returns a range of time series values for specified entity. Returns not aggregated data by default. Use aggregation function ('agg') and aggregation interval ('interval') to enable aggregation of the results on the database / server side. The aggregation is generally more efficient then fetching all records. \n\n```json\n{\n  \"temperature\": [\n    {\n      \"value\": 36.7,\n      \"ts\": 1609459200000\n    },\n    {\n      \"value\": 36.6,\n      \"ts\": 1609459201000\n    }\n  ]\n}\n```\n\nReferencing a non-existing entity Id or invalid entity type will cause an error. \n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}?keys=sed Excepteur&startTs=-83202719&endTs=-83202719&intervalType=dolor consequat Ut labore laborum&interval=0&timeZone=sed Excepteur&limit=100&agg=sit dolore&orderBy=nisi velit esse&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "startTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "endTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "intervalType",
                      "value": "dolor consequat Ut labore laborum"
                    },
                    {
                      "key": "interval",
                      "value": "0"
                    },
                    {
                      "key": "timeZone",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "limit",
                      "value": "100"
                    },
                    {
                      "key": "agg",
                      "value": "sit dolore"
                    },
                    {
                      "key": "orderBy",
                      "value": "nisi velit esse"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}?keys=sed Excepteur&startTs=-83202719&endTs=-83202719&intervalType=dolor consequat Ut labore laborum&interval=0&timeZone=sed Excepteur&limit=100&agg=sit dolore&orderBy=nisi velit esse&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "startTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "endTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "intervalType",
                      "value": "dolor consequat Ut labore laborum"
                    },
                    {
                      "key": "interval",
                      "value": "0"
                    },
                    {
                      "key": "timeZone",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "limit",
                      "value": "100"
                    },
                    {
                      "key": "agg",
                      "value": "sit dolore"
                    },
                    {
                      "key": "orderBy",
                      "value": "nisi velit esse"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}?keys=sed Excepteur&startTs=-83202719&endTs=-83202719&intervalType=dolor consequat Ut labore laborum&interval=0&timeZone=sed Excepteur&limit=100&agg=sit dolore&orderBy=nisi velit esse&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "startTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "endTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "intervalType",
                      "value": "dolor consequat Ut labore laborum"
                    },
                    {
                      "key": "interval",
                      "value": "0"
                    },
                    {
                      "key": "timeZone",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "limit",
                      "value": "100"
                    },
                    {
                      "key": "agg",
                      "value": "sit dolore"
                    },
                    {
                      "key": "orderBy",
                      "value": "nisi velit esse"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}?keys=sed Excepteur&startTs=-83202719&endTs=-83202719&intervalType=dolor consequat Ut labore laborum&interval=0&timeZone=sed Excepteur&limit=100&agg=sit dolore&orderBy=nisi velit esse&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "startTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "endTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "intervalType",
                      "value": "dolor consequat Ut labore laborum"
                    },
                    {
                      "key": "interval",
                      "value": "0"
                    },
                    {
                      "key": "timeZone",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "limit",
                      "value": "100"
                    },
                    {
                      "key": "agg",
                      "value": "sit dolore"
                    },
                    {
                      "key": "orderBy",
                      "value": "nisi velit esse"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}?keys=sed Excepteur&startTs=-83202719&endTs=-83202719&intervalType=dolor consequat Ut labore laborum&interval=0&timeZone=sed Excepteur&limit=100&agg=sit dolore&orderBy=nisi velit esse&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "startTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "endTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "intervalType",
                      "value": "dolor consequat Ut labore laborum"
                    },
                    {
                      "key": "interval",
                      "value": "0"
                    },
                    {
                      "key": "timeZone",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "limit",
                      "value": "100"
                    },
                    {
                      "key": "agg",
                      "value": "sit dolore"
                    },
                    {
                      "key": "orderBy",
                      "value": "nisi velit esse"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}?keys=sed Excepteur&startTs=-83202719&endTs=-83202719&intervalType=dolor consequat Ut labore laborum&interval=0&timeZone=sed Excepteur&limit=100&agg=sit dolore&orderBy=nisi velit esse&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,startTs,endTs,intervalType,interval,timeZone,limit,agg,orderBy,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "startTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "endTs",
                      "value": "-83202719"
                    },
                    {
                      "key": "intervalType",
                      "value": "dolor consequat Ut labore laborum"
                    },
                    {
                      "key": "interval",
                      "value": "0"
                    },
                    {
                      "key": "timeZone",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "limit",
                      "value": "100"
                    },
                    {
                      "key": "agg",
                      "value": "sit dolore"
                    },
                    {
                      "key": "orderBy",
                      "value": "nisi velit esse"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Latest Timeseries value by keys",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/plugins/telemetry/DEVICE/b95aac90-66b0-11f0-a3fb-fbc728d47bf4/values/timeseries?keys=deltaWaterCount,waterCount&useStrictDataTypes=false&startTs=0&endTs=1767225599000",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "plugins",
                "telemetry",
                "DEVICE",
                "b95aac90-66b0-11f0-a3fb-fbc728d47bf4",
                "values",
                "timeseries"
              ],
              "query": [
                {
                  "key": "keys",
                  "value": "deltaWaterCount,waterCount",
                  "description": "A string value representing the comma-separated list of telemetry keys. If keys are not selected, the result will return all latest time series. For example, 'temperature,humidity'."
                },
                {
                  "key": "useStrictDataTypes",
                  "value": "false",
                  "description": "Enables/disables conversion of telemetry values to strings. Conversion is enabled by default. Set parameter to 'true' in order to disable the conversion."
                },
                {
                  "key": "agg",
                  "value": "ALL",
                  "disabled": true
                },
                {
                  "key": "startTs",
                  "value": "0"
                },
                {
                  "key": "endTs",
                  "value": "1767225599000"
                }
              ]
            },
            "description": "Returns all time series that belong to specified entity. Use optional 'keys' parameter to return specific time series. The result is a JSON object. The format of the values depends on the 'useStrictDataTypes' parameter. By default, all time series values are converted to strings: \n\n```json\n{\n  \"stringTsKey\": [{ \"value\": \"value\", \"ts\": 1609459200000}],\n  \"booleanTsKey\": [{ \"value\": \"false\", \"ts\": 1609459200000}],\n  \"doubleTsKey\": [{ \"value\": \"42.2\", \"ts\": 1609459200000}],\n  \"longTsKey\": [{ \"value\": \"73\", \"ts\": 1609459200000}],\n  \"jsonTsKey\": [{ \"value\": \"{\\\"someNumber\\\": 42,\\\"someArray\\\": [1,2,3],\\\"someNestedObject\\\": {\\\"key\\\": \\\"value\\\"}}\", \"ts\": 1609459200000}]\n}\n\n```\n\n However, it is possible to request the values without conversion ('useStrictDataTypes'=true): \n\n```json\n{\n  \"stringTsKey\": [{ \"value\": \"value\", \"ts\": 1609459200000}],\n  \"booleanTsKey\": [{ \"value\": false, \"ts\": 1609459200000}],\n  \"doubleTsKey\": [{ \"value\": 42.2, \"ts\": 1609459200000}],\n  \"longTsKey\": [{ \"value\": 73, \"ts\": 1609459200000}],\n  \"jsonTsKey\": [{ \n    \"value\": {\n      \"someNumber\": 42,\n      \"someArray\": [1,2,3],\n      \"someNestedObject\": {\"key\": \"value\"}\n    }, \n    \"ts\": 1609459200000}]\n}\n\n```\n\n Referencing a non-existing entity Id or invalid entity type will cause an error. \n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,useStrictDataTypes}}?keys=sed Excepteur&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,useStrictDataTypes}}?keys=sed Excepteur&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,useStrictDataTypes}}?keys=sed Excepteur&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,useStrictDataTypes}}?keys=sed Excepteur&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,useStrictDataTypes}}?keys=sed Excepteur&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/timeseries{{?keys,useStrictDataTypes}}?keys=sed Excepteur&useStrictDataTypes=false",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "timeseries{{?keys,useStrictDataTypes}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    },
                    {
                      "key": "useStrictDataTypes",
                      "value": "false"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Available Keys for Server Attributes",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/plugins/telemetry/DEVICE/539be2e0-57a9-11f0-8faa-bd0b06b17044/keys/attributes",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "plugins",
                "telemetry",
                "DEVICE",
                "539be2e0-57a9-11f0-8faa-bd0b06b17044",
                "keys",
                "attributes"
              ]
            },
            "description": "Returns a set of unique attribute key names for the selected entity. The response will include merged key names set for all attribute scopes:\n\n * SERVER_SCOPE - supported for all entity types;\n * CLIENT_SCOPE - supported for devices;\n * SHARED_SCOPE - supported for devices. \n\nReferencing a non-existing entity Id or invalid entity type will cause an error. \n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/attributes",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "attributes"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/attributes",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "attributes"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/attributes",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "attributes"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/attributes",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "attributes"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/attributes",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "attributes"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/keys/attributes",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "keys",
                    "attributes"
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        },
        {
          "name": "Get Server Attributes by Keys",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{TOKEN}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/plugins/telemetry/DEVICE/539be2e0-57a9-11f0-8faa-bd0b06b17044/values/attributes?keys=lastActivityTime,inactivityAlarmTime,active",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "plugins",
                "telemetry",
                "DEVICE",
                "539be2e0-57a9-11f0-8faa-bd0b06b17044",
                "values",
                "attributes"
              ],
              "query": [
                {
                  "key": "keys",
                  "value": "lastActivityTime,inactivityAlarmTime,active",
                  "description": "Get by key (opcional)"
                }
              ]
            },
            "description": "Returns all attributes that belong to specified entity. Use optional 'keys' parameter to return specific attributes.\n Example of the result: \n\n```json\n[\n  {\"key\": \"stringAttributeKey\", \"value\": \"value\", \"lastUpdateTs\": 1609459200000},\n  {\"key\": \"booleanAttributeKey\", \"value\": false, \"lastUpdateTs\": 1609459200001},\n  {\"key\": \"doubleAttributeKey\", \"value\": 42.2, \"lastUpdateTs\": 1609459200002},\n  {\"key\": \"longKeyExample\", \"value\": 73, \"lastUpdateTs\": 1609459200003},\n  {\"key\": \"jsonKeyExample\",\n    \"value\": {\n      \"someNumber\": 42,\n      \"someArray\": [1,2,3],\n      \"someNestedObject\": {\"key\": \"value\"}\n    },\n    \"lastUpdateTs\": 1609459200004\n  }\n]\n```\n\n Referencing a non-existing entity Id or invalid entity type will cause an error. \n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority."
          },
          "response": [
            {
              "name": "OK",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/attributes{{?keys}}?keys=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "attributes{{?keys}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/attributes{{?keys}}?keys=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "attributes{{?keys}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 400,\n  \"message\": \"Invalid UUID string: 123\",\n  \"errorCode\": 31,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/attributes{{?keys}}?keys=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "attributes{{?keys}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 401,\n  \"message\": \"Authentication failed\",\n  \"errorCode\": 10,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Forbidden",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/attributes{{?keys}}?keys=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "attributes{{?keys}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 403,\n  \"message\": \"You don't have permission to perform this operation!\",\n  \"errorCode\": 20,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/attributes{{?keys}}?keys=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "attributes{{?keys}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 404,\n  \"message\": \"Requested item wasn't found!\",\n  \"errorCode\": 32,\n  \"timestamp\": 1751739864585\n}"
            },
            {
              "name": "Too Many Requests",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/plugins/telemetry/:entityType/:entityId/values/attributes{{?keys}}?keys=sed Excepteur",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "plugins",
                    "telemetry",
                    ":entityType",
                    ":entityId",
                    "values",
                    "attributes{{?keys}}"
                  ],
                  "query": [
                    {
                      "key": "keys",
                      "value": "sed Excepteur"
                    }
                  ],
                  "variable": [
                    {
                      "key": "entityType",
                      "value": "DEVICE",
                      "description": "(Required) A string value representing the entity type. For example, 'DEVICE'"
                    },
                    {
                      "key": "entityId",
                      "value": "sed Excepteur",
                      "description": "(Required) A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'"
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": 429,\n  \"message\": \"Too many requests for current tenant!\",\n  \"errorCode\": 33,\n  \"timestamp\": 1751739864585\n}"
            }
          ]
        }
      ],
      "description": "Este folder es crucial para la facturación, ya que contiene las solicitudes para acceder a los datos de telemetría de los dispositivos. Permite obtener los últimos valores instantáneos, consultar series de tiempo históricas para calcular valores acumulados (consumo), y descubrir las claves de telemetría disponibles, asegurando la precisión de los datos para los sistemas."
    }
  ]
}
